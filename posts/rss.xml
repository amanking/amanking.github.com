<?xml version="1.0"?>
<rss version="2.0">
  <channel>
    <title>Aman King</title>
    <link>http://www.amanking.com</link>
    <pubDate>2013-12-18 01:21:35 +0530</pubDate>
    <item>
      <title>Measuring Progress</title>
      <link>http://www.amanking.com/measuring-progress</link>
      <pubDate>2013-12-17</pubDate>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;If you can not measure it, you can not improve it.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href="http://en.wikipedia.org/wiki/William_Thomson,_1st_Baron_Kelvin"&gt;Lord Kelvin&lt;/a&gt; is accredited with the above quote. He was not talking about Agile software development but he was probably on to &lt;em&gt;continuous improvement&lt;/em&gt;. The latter is integral to the former.&lt;/p&gt;

&lt;p&gt;A positive change on a metric can be an &lt;em&gt;indicator&lt;/em&gt; of progress or improvement. It is not a guarantee of progress but an indicator. Perhaps if we combine different metrics, all indicating progress on interconnected concepts, we can have higher confidence that there is improvement.&lt;/p&gt;

&lt;h3 id="toc_0"&gt;Sample Case Study&lt;/h3&gt;

&lt;p&gt;Let us say Team A and Team B both start off with 2% code coverage. There is strong &lt;em&gt;encouragement&lt;/em&gt; from Management that coverage needs to improve. Team A adopts a traditional unit testing approach, ie, adding tests after code is written. Team B adopts TDD, ie, writing test first and then code.&lt;/p&gt;

&lt;p&gt;Two months later, Team A has 25% code coverage. Team B has 10%.&lt;/p&gt;

&lt;p&gt;Which team has made better progress?&lt;/p&gt;

&lt;p&gt;Answer is we don&amp;#39;t know. If we treat &lt;em&gt;measuring progress&lt;/em&gt; as equivalent to &lt;em&gt;measuring code coverage&lt;/em&gt;, clearly Team A is better off. But is progress the same as code coverage?&lt;/p&gt;

&lt;p&gt;Let us bring in another metric: Avg Defect Count per Iteration. Let&amp;#39;s say Team A and B both started with 20. After the two months, Team A has a defect count of 12, while Team B has 8.&lt;/p&gt;

&lt;p&gt;Looking at this:&lt;/p&gt;

&lt;table border="1"&gt;
  &lt;tr&gt;
      &lt;th&gt;Team&lt;/th&gt;
      &lt;th&gt;Coverage - Before&lt;/th&gt;
      &lt;th&gt;Avg Defect Count - Before&lt;/th&gt;
      &lt;th&gt;Coverage - After&lt;/th&gt;
      &lt;th&gt;Avg Defect Count - After&lt;/th&gt;
  &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;A&lt;/td&gt;
        &lt;td&gt;2%&lt;/td&gt;
        &lt;td&gt;20&lt;/td&gt;
        &lt;td&gt;25%&lt;/td&gt;
        &lt;td&gt;12&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
        &lt;td&gt;B&lt;/td&gt;
        &lt;td&gt;2%&lt;/td&gt;
        &lt;td&gt;20&lt;/td&gt;
        &lt;td&gt;10%&lt;/td&gt;
        &lt;td&gt;8&lt;/td&gt;
    &lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;&lt;br&gt;
Which team has made better progress?&lt;/p&gt;

&lt;p&gt;With these combined metrics, we are tempted to say Team B. Because having lesser defects seems associated with quality improvement.&lt;/p&gt;

&lt;p&gt;Perhaps for Team B, TDD led to better understanding of new features and improved quality. However, it did not increase code coverage for existing code that was not touched. On the other hand, Team A focused on increasing code coverage but the effectiveness of the covering tests was questionable, which resulted in higher coverage but not a proportional gain in quality.&lt;/p&gt;

&lt;p&gt;Of course, our answer could still be wrong! Perhaps Team B had a couple of QAs go on vacation, which led to some stories not being tested exhaustively (functional, manual, exploratory, etc), and hence, lesser defects were found.&lt;/p&gt;

&lt;p&gt;The learning is that these numbers are all indicators, and subjectivity has to be applied. Measuring progress is not about measuring numbers. Continuous improvement is not about improving numbers.&lt;/p&gt;

&lt;h3 id="toc_1"&gt;Techniques&lt;/h3&gt;

&lt;p&gt;Having established that, indicators are still necessary and can be an asset during &lt;a href="/agile-coaching-roles"&gt;Agile Coaching&lt;/a&gt;. If we feel the team is making progress, an improvement in numbers will support that. Corollary is that if numbers show a downward trend, we need to investigate if there are slippages or reasonable circumstances to account for that. For all the following suggestions, what is useful is tracking them over a period of time. Based on context, you could decided how frequently to capture them, and how to analyze the results, and if any action item is needed.&lt;/p&gt;

&lt;h4 id="toc_2"&gt;Metrics&lt;/h4&gt;

&lt;p&gt;Metrics used for &lt;em&gt;baselining&lt;/em&gt; can be used for continuous monitoring. Remember to choose metrics based on goals, and definitely choose more than one. You can read more &lt;a href="/metrics-baselining"&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id="toc_3"&gt;Confidence Meter&lt;/h4&gt;

&lt;p&gt;Another technique I have seen used effectively is a &lt;em&gt;Confidence Meter&lt;/em&gt;. On or near the Story Wall, we could have a flipchart or whiteboard area to capture the confidence which individual team members have in making a successful release at the end of the iteration. 90% or higher reflects great confidence while anything lower than 30% shows lack of confidence. Team members could update these numbers against their name at the end of a stand up, and if there is a wide variance in perspectives, it could trigger discussions immediately instead of waiting till a Retrospective.&lt;/p&gt;

&lt;h4 id="toc_4"&gt;Surveys&lt;/h4&gt;

&lt;p&gt;One technique, strong on subjectivity, is &lt;em&gt;Surveys&lt;/em&gt;. It may seem casual and imprecise but the results can be revealing. A good survey will have a mix of objective and subjective questions. An objective question could be &lt;em&gt;&amp;quot;Has frequency and pace of refactoring increased?&amp;quot;&lt;/em&gt;, with options ranging from &lt;em&gt;0 (Barely)&lt;/em&gt; to &lt;em&gt;5 (Great extent)&lt;/em&gt;. A subjective comment box could capture something like &lt;em&gt;&amp;quot;Do you feel confident to help others with XP Practices, and in what areas?&amp;quot;&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
You can come up with more things to track to indicate progress in your team&amp;#39;s context. It also helps motivation if you can make the trend visible, perhaps by using Big Visible Charts or Information Radiators. But yes, ever so often, do check and remind people that the goal is to make progress and to improve on aspects that provide value to the Business or end users, and not to get solely number-driven.&lt;/p&gt;
</description>
    </item>
    <item>
      <title>Facilitation Techniques</title>
      <link>http://www.amanking.com/facilitation-techniques</link>
      <pubDate>2013-12-16</pubDate>
      <description>&lt;p&gt;Facilitation is a very useful skill to have. It helps not only in &lt;a href="/coaching-basics"&gt;coaching&lt;/a&gt; but in many day-to-day activities. Whether a team discussion or a team activity, a good facilitator can make all the difference.&lt;/p&gt;

&lt;h2 id="toc_0"&gt;Retrospective&lt;/h2&gt;

&lt;p&gt;A common facilitation technique is a &lt;em&gt;Retrospective&lt;/em&gt;. It has a clear objective of looking back, as a group, at a recent time period or a particular incident, collect thoughts around different aspects, and then brainstorm on action items related to the topic. Agile teams use this technique for continuous improvement. I like relating it to &lt;a href="http://agilemanifesto.org/principles.html"&gt;the 12th Agile Principle&lt;/a&gt;:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;&amp;quot;At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly.&amp;quot;&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;While there are some well-known Retrospective formats, I try to customize the experience based on context. This could be how the recent iteration went, the motivation levels of the team, concepts that the team can relate to, or sometimes just something random that could be fun!&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img alt="Retro" src="/assets/media/images/coaching/retro.png"&gt;&lt;br&gt;
&lt;small class="muted"&gt;Retro using a Fuel/Mud analogy&lt;/small&gt;&lt;/p&gt;

&lt;h2 id="toc_1"&gt;Future-spective&lt;/h2&gt;

&lt;p&gt;A variation of the Retrospective is a &lt;em&gt;Future-spective&lt;/em&gt;. As the name suggests, it is not about looking back but about looking forward. Such an exercise helps in goal-setting, expectation-setting, coming up with a common vision, and sometimes an actionable plan. Typically it involves having the group imagine that they are in the future, and then describing what they see has gone well or what has gone wrong.&lt;/p&gt;

&lt;h2 id="toc_2"&gt;Mind Mapping&lt;/h2&gt;

&lt;p&gt;A lesser used technique for facilitation is &lt;em&gt;Mind Mapping&lt;/em&gt;. A number of people have discovered it for personal use. I have used it in group situations as well, whether to make my own thoughts visual so that others can follow or to capture thoughts of the group, presenting it back to them in real time. Having thoughts captured visually and linked together, helps explore the topic space even further, and make stronger connections between different ideas. It also helps retention. Mind Mapping can be used effectively for cause-effect analysis or for drilling down a concept into granular levels which are more easily recognizable or actionable. In fact, you could use this technique in a Retrospective to draw out effective action items after points have been put forth.&lt;/p&gt;

&lt;h2 id="toc_3"&gt;Fishbowl&lt;/h2&gt;

&lt;p&gt;Sometimes you may be facilitating a large group, or a group that isn&amp;#39;t very vocal, or perhaps a topic that is a bit controversial. In all of these cases, having an effective discussion may be difficult. Here a technique called as &lt;em&gt;Fishbowl&lt;/em&gt; can help. It is a constrained form of discussion where there are set rules for participation. At any given point in time, there is a panel with a fixed number of chairs. Out of these chairs, all but one can be filled by people who wish to participate in the discussion. If someone new steps in and sits on the vacant chair, one of the other participants has to volunteer to step out. This encourages multiple viewpoints to be heard, and discourages anyone from overtaking the discussion for long. With groups that are not vocal, having many chairs empty creates an awkward situation, forcing a few people to self-nominate themselves for the panel discussion. Seeing a few people start off, others feel encouraged to join in.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
There are even more facilitation techniques that one can employ, for example, &lt;em&gt;fist of five&lt;/em&gt;. It is good to have them in your toolkit especially if you are in a role that could benefit from a collaborative team.&lt;/p&gt;

&lt;h2 id="toc_4"&gt;Further Resources&lt;/h2&gt;

&lt;h3 id="toc_5"&gt;Retrospectives&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.funretrospectives.com/"&gt;Fun Retrospectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://retrospectivewiki.org/"&gt;Retrospectives Wiki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pragprog.com/book/dlret/agile-retrospectives"&gt;Agile Retrospectives&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="https://leanpub.com/the-retrospective-handbook"&gt;The Retrospective Handbook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_6"&gt;Mind Mapping&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Mind_map"&gt;Mind Mapping&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://freemind.sourceforge.net/wiki/index.php/Main_Page"&gt;FreeMind&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.mindmup.com/"&gt;MindMup&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_7"&gt;General&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Fishbowl_(conversation)"&gt;Fishbowl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://java.dzone.com/articles/fist-five"&gt;Fist of five&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.amazon.com/Secrets-Facilitation-S-M-R-T-Getting/dp/0787975788"&gt;The Secrets of Facilitation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Metrics Baselining</title>
      <link>http://www.amanking.com/metrics-baselining</link>
      <pubDate>2013-12-15</pubDate>
      <description>&lt;p&gt;During the assessment period of an &lt;a href="/agile-coaching-engagements"&gt;Agile coaching engagement&lt;/a&gt;, a lot of information is captured around the team&amp;#39;s &lt;a href="/process-mapping"&gt;current processes and practices&lt;/a&gt;. Along with these, gathering quantitative data is also important. These will go into the assessment report at the end, portraying some aspects of current state. Collecting such metrics during assessment is called &lt;em&gt;Metrics Baselining&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Recommendations can be made on the basis of numbers and trends observed, especially using complementary metrics. If the assessment is followed by Agile Adoption, these metrics can be used to indicate progress in chosen areas. From a sustenance point of view, a Before/After comparison around these metrics can determine comfort level and for demonstrating coaching effectiveness.&lt;/p&gt;

&lt;p&gt;One may think capturing quantitative data will be simpler than gathering qualitative data. In my experience, the former is trickier and even risky. From a tooling perspective, getting to the numbers might be easy enough. But knowing what numbers actually matter is where the complexity lies. Especially since typically during an assessment, the team and the coach themselves are unaware of exactly where the team&amp;#39;s challenges lie, and the assessment is supposed to help discover these. Tracking irrelevant metrics may send a team down a useless path, or worse, a harmful path. Metrics selection should be guided by clear meaningful goals. But when unsure, an Agile Coach may choose to capture whatever can be captured, with a clear disclaimer that it&amp;#39;s being done so that the information is available &lt;em&gt;if&lt;/em&gt; it becomes useful later. So be sure to archive these metrics somewhere safe.&lt;/p&gt;

&lt;p&gt;Some typical metrics captured are as follows.&lt;/p&gt;

&lt;h3 id="toc_0"&gt;Productivity&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Cycle time&lt;/li&gt;
&lt;li&gt;Say/Do ratio&lt;/li&gt;
&lt;li&gt;Velocity&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_1"&gt;Quality&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Defect count over time&lt;/li&gt;
&lt;li&gt;Defect ratio across environments or testing stages&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_2"&gt;Code base&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Code coverage&lt;/li&gt;
&lt;li&gt;Cyclomatic complexity&lt;/li&gt;
&lt;li&gt;Code toxicity&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id="toc_3"&gt;Build and deployment&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;Build frequency&lt;/li&gt;
&lt;li&gt;Build pass/fail ratio&lt;/li&gt;
&lt;li&gt;Deployment frequency&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Depending on where the team is with certain practices, some of the above metrics may not be readily available or even applicable at the time of assessment. You may need to tweak what kind of metrics you gather in such cases by finding reasonable context-based alternatives.&lt;/p&gt;

&lt;p&gt;I cannot overstate how important it is to not become metrics-driven at this stage or even later. It is likely that the client may need to be educated around the perils of the same. A good guide may be the Goal-Question-Metric model.&lt;/p&gt;

&lt;h3 id="toc_4"&gt;Further resources&lt;/h3&gt;

&lt;h4 id="toc_5"&gt;Metrics related&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.leadingagile.com/2013/07/agile-health-metrics-for-predictability/"&gt;Agile Health Metrics for Predictability&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/GQM"&gt;Goal-Question-Metric model&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id="toc_6"&gt;Tools related&lt;/h4&gt;

&lt;ul&gt;
&lt;li&gt;Cycle time: &lt;a href="http://www.thoughtworks.com/insights/blog/get-better-2-minutes-mingle-cycle-time-analytics"&gt;Mingle&lt;/a&gt;, &lt;a href="https://confluence.atlassian.com/display/AGILE/Viewing+the+Control+Chart"&gt;JIRA&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Code metrics: &lt;a href="http://erik.doernenburg.com/2008/11/how-toxic-is-your-code/"&gt;Code Toxicity&lt;/a&gt;, &lt;a href="http://checkstyle.sourceforge.net/"&gt;Checkstyle&lt;/a&gt;, &lt;a href="http://www.sonarqube.org/"&gt;Sonar&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Process Mapping</title>
      <link>http://www.amanking.com/process-mapping</link>
      <pubDate>2013-12-14</pubDate>
      <description>&lt;p&gt;After having collected enough information during the assessment period of an &lt;a href="/agile-coaching-engagements"&gt;Agile coaching engagement&lt;/a&gt;, especially using &lt;a href="/assessment-interviews"&gt;interviews&lt;/a&gt;, an Agile Coach should be in a position to draw a &lt;em&gt;Process Map&lt;/em&gt; of whatever has been discovered.&lt;/p&gt;

&lt;p&gt;You could go use a tool to build a clean and elaborate process map but I recommend starting with stickies. Take a bunch of stickies and write down the important activities that you know different roles get involved in during the start of an iteration, at the end of an iteration, and in-between. Give a short name for the activity and note the name of the role as well. Keep the granularity at medium level, as you don&amp;#39;t want too many stickies at once, at least not initially.&lt;/p&gt;

&lt;p&gt;Now on a whiteboard, sequence these stickies, one at a time, in the order they are done. Draw connecting lines between the stickies as you proceed. If some activities are repeated, draw loops accordingly. You will now have a visual timeline of an iteration. If you can spot obvious gaps in the timeline, add more stickies for those missing activities along with role participation.&lt;/p&gt;

&lt;p&gt;Now you will want to know more about what feeds into an iteration and how, and what goes out of an iteration and how. The former is usually around requirements and defect management. The latter is typically about releases and deployments. In most organizations, customer feedback and customer support connects the end point to the starting point. However, some of this could be just your assumption. It is unlikely you&amp;#39;d have gotten a complete view of the process as some of these aspects are not apparent mid-release nor are all team members aware of them. It is time to get proper validation.&lt;/p&gt;

&lt;p&gt;Take a pic of the process map you&amp;#39;ve come up with, and take it off the board. Keep the stickies handy though. Schedule an hour-long meeting with those roles who&amp;#39;d be aware of these steps at a high level. Typically it is a Project Manager, a Tech Lead, or the Product Owner. Repeat the above process in front of them (using your earlier stickies) but clearly call out every addition you make to the process map. Give them a chance to react at every step, getting either validation or corrections from them. Annotate the flow or the stickies themselves with any details you get. For the gaps or the big picture (before/after iteration), let them call out the activities and the roles involved (you could capture exact names of people as well). Cross-check with what you&amp;#39;d assumed. For those that match, use your stickies. For those that don&amp;#39;t, tear off your sticky and create new ones on the fly. In the end, summarize the map on the board to catch any obvious misses.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;img alt="Process Map" src="/assets/media/images/coaching/process-map.png"&gt;&lt;br&gt;
&lt;small class="muted"&gt;Sample process map&lt;/small&gt;&lt;/p&gt;

&lt;p&gt;Keep the map on the board, and show it to team members you had interviewed before. Get their insights about the visual. Mostly it should be a confirmation of the activities depicted. You could also get more details around certain activities. Additionally, you can cross-check different people&amp;#39;s viewpoints.&lt;/p&gt;

&lt;p&gt;Try to capture this map using a tool or in the simplest case, attach a picture of it on a wiki page that describes the process in words as well.&lt;/p&gt;

&lt;p&gt;Once you have a process map, you could consider doing a &lt;em&gt;value stream mapping&lt;/em&gt; if you feel it will help with the engagement objectives.&lt;/p&gt;

&lt;p&gt;Some related links:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.isixsigma.com/tools-templates/process-mapping/building-valuable-process-maps-takes-skill-and-time/"&gt;Building process maps&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://en.wikipedia.org/wiki/Value_stream_mapping"&gt;Value stream mapping - Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.slideshare.net/michael.sahota/value-stream-mapping-workshop"&gt;Value stream mapping workshop slides&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    <item>
      <title>Assessment Interviews</title>
      <link>http://www.amanking.com/assessment-interviews</link>
      <pubDate>2013-12-13</pubDate>
      <description>&lt;p&gt;During the assessment week of an &lt;a href="/agile-coaching-engagements"&gt;Agile coaching engagement&lt;/a&gt;, the goal is to learn about the current state of the team. Special attention is needed towards capturing:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Day-to-day activities of various roles&lt;/li&gt;
&lt;li&gt;Additional activities such as on planning day, deployment day, etc&lt;/li&gt;
&lt;li&gt;Tools used to support these activities&lt;/li&gt;
&lt;li&gt;Processes around these activities&lt;/li&gt;
&lt;li&gt;Interaction, collaboration, and dependency on other roles or teams during these activities&lt;/li&gt;
&lt;li&gt;Infrastructure environments involved in these activities&lt;/li&gt;
&lt;li&gt;Outcome of these activities in an iteration-level view&lt;/li&gt;
&lt;li&gt;Challenges faced in performing any of these activities or the role in general&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is important to remain objective while making observations, and to not fall into the temptation of drawing conclusions or making recommendations. The latter is needed but should come towards the end of the assessment when holistic information is available.&lt;/p&gt;

&lt;p&gt;One way to get visibility into the above aspects is conducting interviews of team members. We need not talk to everyone but only a representative sample (perhaps 1-2 individuals) from each role. This should be complemented with first-hand observation of how they work. Here is a suggestion of how you could go about this activity.&lt;/p&gt;

&lt;h3 id="toc_0"&gt;Interview preparation&lt;/h3&gt;

&lt;p&gt;Inform the Project Manager or equivalent a day or two in advance about the interviews you are planning to do. Learn about the various roles in the team, and ask the PM to inform team members to make time for the interview, which could last anywhere between 30 mins to an hour. It is usually a good idea to not conduct the interviews in a meeting room but at the desk of the individual. You should set up a time beforehand so that the interviewee is not distracted during the interview. Based on any insights already shared with you about the team&amp;#39;s current context, make a list of areas you want to specifically ask about. Some of these will be role-specific, and some general.&lt;/p&gt;

&lt;h3 id="toc_1"&gt;Interview kickoff&lt;/h3&gt;

&lt;p&gt;Introduce or re-introduce yourself to the individual. Briefly let them know why you are there with the team. Explain what the interview is about and how it will help. The interviewee should not feel like this is a test which has right or wrong answers. Thank the person for agreeing to the interview. Try to keep the interaction balanced between formal and informal so that it seems important and yet the interviewee feels comfortable in opening up and being forthright. Keep a notebook handy, and inform the interviewee that you&amp;#39;ll be scribbling notes during the interview, which you can share later after some clean-up if the interviewee is interested. It helps to reinforce transparency. First thing to note down is the person&amp;#39;s name and role, along with the interview date.&lt;/p&gt;

&lt;h3 id="toc_2"&gt;Interview questions&lt;/h3&gt;

&lt;p&gt;Start simple by asking about the person&amp;#39;s background in brief, typically around industry experience, how long with the current team, and role description. Follow this up by asking the person to describe their &lt;em&gt;typical day&lt;/em&gt;. You can expect to get a lot of information out of this. Be ready to probe for details as and when required. Don&amp;#39;t stick to going breadth-wise or depth-wise; switch how you elicit details based on how relevant you feel a topic is. You can even ask the individual to &lt;em&gt;show-and-tell&lt;/em&gt; some aspects, perhaps by using a computer or walking up to a board. That said, remember to timebox. After a point too much detail is unnecessary at this stage. Try to cover all the aspects mentioned at the start of this post, not in that order but activity by activity. An important piece that you can end the interview with, is asking about the challenges faced on the project. You will get insights that you might not gain by first-hand observation. If you have done a few interviews already, use further interviews to validate some of the points mentioned by others to get different viewpoints on the same thing. That too can be quite revealing at times.&lt;/p&gt;

&lt;h3 id="toc_3"&gt;Interview documentation&lt;/h3&gt;

&lt;p&gt;Scribbling on a notepad may not feel like an overhead but cleaning up your notes to put in a Word document or a wiki page might seem tiresome. But you will thank yourself later for doing so. I am surprised how often I can&amp;#39;t read my own handwriting just a few days later. Also, searching for something specific in a physical notepad is not as quick as one might imagine. Typing out the notes electronically is also an opportunity to structure the observations better. This is when you can collate information in a role-specific manner rather than as individual interviews. You may start to see patterns. These will feed into the later phases of assessment, ie, highlighting bottlenecks and challenges, and making recommendations.&lt;/p&gt;

&lt;p&gt;&lt;br&gt;
Here is a &lt;a href="/assets/media/docs/sample-assessment-interview-notes.pdf"&gt;sample document&lt;/a&gt;. And below are links on related skills:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href="http://www.mindtools.com/CommSkll/ActiveListening.htm"&gt;Active listening skills&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.skillsyouneed.com/ips/active-listening.html"&gt;Active listening signs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://www.skillsyouneed.com/ips/questioning.html"&gt;Questioning&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href="http://pagilista.blogspot.co.uk/2012/04/wait-crucial-consulting-advice.html"&gt;W.A.I.T.&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
  </channel>
</rss>
